// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex`32000a`, img`
..................................................
..................................................
.............22222.......................22222....
......................22222.......................
.....................................222.......222
...............22222..............................
.................................2222....22222....
.........22222....................................
22222222.....................222..................
22222222..........................................
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
...............2..........2...........................................
....22222222...2.......2..2.....22222.................................
...............2..........2.........2.................................
...............2.....2....2...2.....2.................................
222............2..........2.........2............222..................
......22.......2..........2.........2...........................2.....
...............2...2......2..2......2...........................2.....
...22..........2..........2.........2..........2..............2.......
...............22.........2.........2.................................
22..................2.....2...2.....2......22....2........2...........
..........................2.........2.................................
...22............2..................2.................2............222
.............................2......2...22......222...................
222.........222.....................2.................................
..........................222.......222....2222.......................
......................................................................
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile8,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7,myTiles.tile3], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
................
................
....2.2222......
....2...........
....2...........
....2...........
..2.............
................
2...............
...............2
..2......2222..2
...............2
....222........2
...............2
...............2
................
............222.
..........2.....
..........2.....
..........2.....
..........2.....
..........2.....
..........2.....
..........2.....
..2.22222.......
..2.............
..2.............
..2.............
..2.............
..2.............
..2.............
2...............
................
22..2...........
....2...........
....2...........
....2...........
222.............
................
................
`, [myTiles.transparency16,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile1,myTiles.tile7,myTiles.tile9,myTiles.tile10], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile2":
            case "tile4":return tile4;
            case "myTile3":
            case "tile5":return tile5;
            case "myTile4":
            case "tile6":return tile6;
            case "myTile":
            case "tile1":return tile1;
            case "myTile5":
            case "tile7":return tile7;
            case "myTile6":
            case "tile8":return tile8;
            case "myTile7":
            case "tile9":return tile9;
            case "myTile8":
            case "tile10":return tile10;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
